# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# GCP SA
# AC-3, AC-3(7), AC-16(2) - This service account possesses minimal privileges(permissions) and is restricted to performing only the necessary operations for resources within the designated namespace. The service account is associated with the current namespace and is assigned minimal permissions to create resources in this namespace only.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata: # kpt-merge: client-name-config-control/client-name-hierarchy-sa
  name: yoppworks-hierarchy-sa # kpt-set: ${client-name}-hierarchy-sa
  namespace: yoppworks-config-control # kpt-set: ${client-name}-${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: yp-client-mgmt-project-yjs10 # kpt-set: ${client-management-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/yp-client-mgmt-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMServiceAccount|client-name-config-control|client-name-hierarchy-sa'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3, AC-3(7), AC-16(2)
  displayName: yoppworks-hierarchy-sa # kpt-set: ${client-name}-hierarchy-sa
---
# Grant GCP role Folder Admin to GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: hierarchy/client-name-hierarchy-sa-folderadmin-permissions
  name: yoppworks-hierarchy-sa-folderadmin-permissions # kpt-set: ${client-name}-hierarchy-sa-folderadmin-permissions
  namespace: hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/yp-client-mgmt-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|hierarchy|client-name-hierarchy-sa-folderadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    name: clients.yoppworks # kpt-set: clients.${client-name}
  # AC-3, AC-3(7), AC-16(2)
  role: roles/resourcemanager.folderAdmin
  member: "serviceAccount:yoppworks-hierarchy-sa@yp-client-mgmt-project-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:${client-name}-hierarchy-sa@${client-management-project-id}.iam.gserviceaccount.com
---
# K8S SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: client-name-config-control/client-name-hierarchy-sa-workload-identity-binding
  name: yoppworks-hierarchy-sa-workload-identity-binding # kpt-set: ${client-name}-hierarchy-sa-workload-identity-binding
  namespace: yoppworks-config-control # kpt-set: ${client-name}-${management-namespace}
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/yp-client-mgmt-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|client-name-config-control|client-name-hierarchy-sa-workload-identity-binding'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    name: yoppworks-hierarchy-sa # kpt-set: ${client-name}-hierarchy-sa
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
  # AC-3, AC-3(7), AC-16(2)
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - member: serviceAccount:single-kcc-yjs10.svc.id.goog[cnrm-system/cnrm-controller-manager-yoppworks-hierarchy] # kpt-set: serviceAccount:${management-project-id}.svc.id.goog[cnrm-system/cnrm-controller-manager-${client-name}-hierarchy]
---
# K8S namespace
apiVersion: v1
kind: Namespace
metadata: # kpt-merge: /client-name-hierarchy
  name: yoppworks-hierarchy # kpt-set: ${client-name}-hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: '|Namespace|default|client-name-hierarchy'
---
# Link GCP SA to K8S namespace
apiVersion: core.cnrm.cloud.google.com/v1beta1
kind: ConfigConnectorContext
metadata: # kpt-merge: client-name-hierarchy/configconnectorcontext.core.cnrm.cloud.google.com
  name: configconnectorcontext.core.cnrm.cloud.google.com
  namespace: yoppworks-hierarchy # kpt-set: ${client-name}-hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/yp-client-mgmt-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'core.cnrm.cloud.google.com|ConfigConnectorContext|client-name-hierarchy|configconnectorcontext.core.cnrm.cloud.google.com'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3, AC-3(7), AC-16(2)
  googleServiceAccount: yoppworks-hierarchy-sa@yp-client-mgmt-project-yjs10.iam.gserviceaccount.com # kpt-set: ${client-name}-hierarchy-sa@${client-management-project-id}.iam.gserviceaccount.com
---
# Grant viewer role on the hierarchy namespace to projects K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: client-name-hierarchy/allow-resource-reference-from-projects
  name: allow-resource-reference-from-projects
  namespace: yoppworks-hierarchy # kpt-set: ${client-name}-hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/yp-client-mgmt-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|client-name-hierarchy|allow-resource-reference-from-projects'
roleRef:
  # AC-3, AC-3(7), AC-16(2)
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-yoppworks-projects # kpt-set: cnrm-controller-manager-${client-name}-projects
    namespace: cnrm-system
    kind: ServiceAccount
---
# Grant viewer role on the hierarchy namespace to client-name-hierarchy K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: hierarchy/allow-resource-reference-from-client-name-hierarchy
  name: allow-resource-reference-from-yoppworks-hierarchy # kpt-set: allow-resource-reference-from-${client-name}-hierarchy
  namespace: hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/yp-client-mgmt-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|hierarchy|allow-resource-reference-from-client-name-hierarchy'
roleRef:
  # AC-3, AC-3(7), AC-16(2)
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-yoppworks-hierarchy # kpt-set: cnrm-controller-manager-${client-name}-hierarchy
    namespace: cnrm-system
    kind: ServiceAccount
---
# Grant viewer role on the client-name-hierarchy namespace to policies K8S SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: client-name-hierarchy/allow-client-name-hierarchy-resource-reference-from-policies
  name: allow-yoppworks-hierarchy-resource-reference-from-policies # kpt-set: allow-${client-name}-hierarchy-resource-reference-from-policies
  namespace: yoppworks-hierarchy # kpt-set: ${client-name}-hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/yp-client-mgmt-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${client-management-project-id}
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|client-name-hierarchy|allow-client-name-hierarchy-resource-reference-from-policies'
roleRef:
  # AC-3, AC-3(7), AC-16(2)
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-policies
    namespace: cnrm-system
    kind: ServiceAccount
