# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# GCP Service Account for tier3
# AC-3(7), AC-3, AC-16(2) - This service account possesses limited privileges(permissions) and is restricted to performing only the necessary operations for resources within the designated namespace. The service account is associated with the namespace and is assigned roles as required.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata: # kpt-merge: client-name-config-control/project-id-tier3-sa
  name: client-project-yjs10-tier3-sa # kpt-set: ${project-id}-tier3-sa
  namespace: yoppworks-config-control # kpt-set: ${client-name}-${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: client-project-yjs10 # kpt-set: ${project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMServiceAccount|client-name-config-control|project-id-tier3-sa'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  resourceID: tier3-sa
  displayName: tier3-sa
---
# Grant GCP role IAM service account admin to GCP SA on Service Project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: client-name-projects/project-id-tier3-sa-serviceaccountadmin-project-id-permissions
  name: client-project-yjs10-tier3-sa-serviceaccountadmin-client-project-yjs10-permissions # kpt-set: ${project-id}-tier3-sa-serviceaccountadmin-${project-id}-permissions
  namespace: yoppworks-projects # kpt-set: ${client-name}-projects
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|client-name-projects|project-id-tier3-sa-serviceaccountadmin-project-id-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: client-project-yjs10 # kpt-set: ${project-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/iam.serviceAccountAdmin
  member: "serviceAccount:tier3-sa@client-project-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:tier3-sa@${project-id}.iam.gserviceaccount.com
---
# Grant GCP role Security Admin to GCP SA on Service Project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: client-name-projects/project-id-tier3-sa-securityadmin-project-id-permissions
  name: client-project-yjs10-tier3-sa-securityadmin-client-project-yjs10-permissions # kpt-set: ${project-id}-tier3-sa-securityadmin-${project-id}-permissions
  namespace: yoppworks-projects # kpt-set: ${client-name}-projects
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|client-name-projects|project-id-tier3-sa-securityadmin-project-id-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: client-project-yjs10 # kpt-set: ${project-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/iam.securityAdmin
  member: "serviceAccount:tier3-sa@client-project-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:tier3-sa@${project-id}.iam.gserviceaccount.com
---
# Grant GCP role Tier3 Firewall Rule Admin to GCP SA on standard.application-infrastructure folder
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: client-name-hierarchy/project-id-tier3-sa-tier3-firewallrule-admin-app-infra-folder-permissions
  name: client-project-yjs10-tier3-sa-tier3-firewallrule-admin-app-infra-folder-permissions # kpt-set: ${project-id}-tier3-sa-tier3-firewallrule-admin-app-infra-folder-permissions
  namespace: yoppworks-hierarchy # kpt-set: ${client-name}-hierarchy
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|client-name-hierarchy|project-id-tier3-sa-tier3-firewallrule-admin-app-infra-folder-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Folder
    name: standard.applications-infrastructure
  # AC-3(7), AC-3, AC-16(2)
  role: organizations/54422563716/roles/tier3.firewallrule.admin # kpt-set: organizations/${org-id}/roles/tier3.firewallrule.admin
  member: "serviceAccount:tier3-sa@client-project-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:tier3-sa@${project-id}.iam.gserviceaccount.com
---
# Grant GCP role Tier3 DNS Record Admin to GCP SA on Client Host Project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: client-name-projects/project-id-tier3-sa-tier3-dnsrecord-admin-host-project-id-permissions
  name: client-project-yjs10-tier3-sa-tier3-dnsrecord-admin-net-host-project-yjs10-permissions # kpt-set: ${project-id}-tier3-sa-tier3-dnsrecord-admin-${host-project-id}-permissions
  namespace: yoppworks-projects # kpt-set: ${client-name}-projects
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|client-name-projects|project-id-tier3-sa-tier3-dnsrecord-admin-host-project-id-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: net-host-project-yjs10 # kpt-set: ${host-project-id}
  # AC-3(7), AC-3, AC-16(2)
  role: organizations/54422563716/roles/tier3.dnsrecord.admin # kpt-set: organizations/${org-id}/roles/tier3.dnsrecord.admin
  member: "serviceAccount:tier3-sa@client-project-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:tier3-sa@${project-id}.iam.gserviceaccount.com
---
# Grant GCP role Compute Public IP Admin to tier3-sa GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: client-name-projects/project-id-tier3-sa-compute-public-ip-admin-host-project-id-permissions
  name: client-project-yjs10-tier3-sa-compute-public-ip-admin-client-project-yjs10-permissions # kpt-set: ${project-id}-tier3-sa-compute-public-ip-admin-${project-id}-permissions
  namespace: yoppworks-projects # kpt-set: ${client-name}-projects
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|client-name-projects|project-id-tier3-sa-compute-public-ip-admin-host-project-id-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: client-project-yjs10 # kpt-set: ${project-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/compute.publicIpAdmin
  member: "serviceAccount:tier3-sa@client-project-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:tier3-sa@${project-id}.iam.gserviceaccount.com
---
# Grant GCP role Compute Security Admin to tier3-sa GCP SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: client-name-projects/project-id-tier3-sa-compute-security-admin-host-project-id-permissions
  name: client-project-yjs10-tier3-sa-compute-security-admin-client-project-yjs10-permissions # kpt-set: ${project-id}-tier3-sa-compute-security-admin-${project-id}-permissions
  namespace: yoppworks-projects # kpt-set: ${client-name}-projects
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|client-name-projects|project-id-tier3-sa-compute-security-admin-host-project-id-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: client-project-yjs10 # kpt-set: ${project-id}
  # AC-3(7), AC-3, AC-16(2)
  role: roles/compute.securityAdmin
  member: "serviceAccount:tier3-sa@client-project-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:tier3-sa@${project-id}.iam.gserviceaccount.com
---
# K8S SA
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPartialPolicy
metadata: # kpt-merge: client-name-config-control/project-id-tier3-sa-workload-identity-binding
  name: client-project-yjs10-tier3-sa-workload-identity-binding # kpt-set: ${project-id}-tier3-sa-workload-identity-binding
  namespace: yoppworks-config-control # kpt-set: ${client-name}-${management-namespace}
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPartialPolicy|client-name-config-control|project-id-tier3-sa-workload-identity-binding'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    name: client-project-yjs10-tier3-sa # kpt-set: ${project-id}-tier3-sa
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    namespace: yoppworks-config-control # kpt-set: ${client-name}-${management-namespace}
  # AC-3(7), AC-3, AC-16(2)
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - member: serviceAccount:single-kcc-yjs10.svc.id.goog[cnrm-system/cnrm-controller-manager-client-project-yjs10-tier3] # kpt-set: serviceAccount:${management-project-id}.svc.id.goog[cnrm-system/cnrm-controller-manager-${project-id}-tier3]
---
# K8S namespace
apiVersion: v1
kind: Namespace
metadata: # kpt-merge: /project-id-tier3
  name: client-project-yjs10-tier3 # kpt-set: ${project-id}-tier3
  annotations:
    cnrm.cloud.google.com/project-id: client-project-yjs10 # kpt-set: ${project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    internal.kpt.dev/upstream-identifier: '|Namespace|default|project-id-tier3'
---
# Link GCP SA to K8S namespace
apiVersion: core.cnrm.cloud.google.com/v1beta1
kind: ConfigConnectorContext
metadata: # kpt-merge: project-id-tier3/configconnectorcontext.core.cnrm.cloud.google.com
  name: configconnectorcontext.core.cnrm.cloud.google.com
  namespace: client-project-yjs10-tier3 # kpt-set: ${project-id}-tier3
  annotations:
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'core.cnrm.cloud.google.com|ConfigConnectorContext|project-id-tier3|configconnectorcontext.core.cnrm.cloud.google.com'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  # AC-3(7), AC-3, AC-16(2)
  googleServiceAccount: tier3-sa@client-project-yjs10.iam.gserviceaccount.com # kpt-set: tier3-sa@${project-id}.iam.gserviceaccount.com
---
# Give KCC, for this namespace, permission to read KCC resources in the client-name-projects namespace.
# This allows to reference the project resources in the client-name-projects namespace from the tier3 namespace.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: client-name-projects/cnrm-viewer-project-id-tier3
  name: cnrm-viewer-client-project-yjs10-tier3 # kpt-set: cnrm-viewer-${project-id}-tier3
  namespace: yoppworks-projects # kpt-set: ${client-name}-projects
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|client-name-projects|cnrm-viewer-project-id-tier3'
# AC-3(7), AC-3, AC-16(2)
roleRef:
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-project-yjs10-tier3 # kpt-set: cnrm-controller-manager-${project-id}-tier3
    namespace: cnrm-system
    kind: ServiceAccount
---
# Give KCC, for this namespace, permission to read KCC resources in the client-name-networking namespace.
# This allows to reference the network resources in the client-name-networking namespace from the tier3 namespace.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: client-name-networking/cnrm-viewer-project-id-tier3
  name: cnrm-viewer-client-project-yjs10-tier3 # kpt-set: cnrm-viewer-${project-id}-tier3
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|client-name-networking|cnrm-viewer-project-id-tier3'
# AC-3(7), AC-3, AC-16(2)
roleRef:
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-project-yjs10-tier3 # kpt-set: cnrm-controller-manager-${project-id}-tier3
    namespace: cnrm-system
    kind: ServiceAccount
---
# Give KCC, for this namespace, permission to read KCC resources in the client-name-logging namespace.
# This allows to reference the pubsub topic resources in the client-name-logging namespace from the tier3 namespace.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: client-name-logging/cnrm-viewer-project-id-tier3
  name: cnrm-viewer-client-project-yjs10-tier3 # kpt-set: cnrm-viewer-${project-id}-tier3
  namespace: yoppworks-logging # kpt-set: ${client-name}-logging
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|client-name-logging|cnrm-viewer-project-id-tier3'
# AC-3(7), AC-3, AC-16(2)
roleRef:
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-project-yjs10-tier3 # kpt-set: cnrm-controller-manager-${project-id}-tier3
    namespace: cnrm-system
    kind: ServiceAccount
---
# Give KCC, for this namespace, permission to read KCC resources in the tier4 namespace.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: # kpt-merge: project-id-tier4/cnrm-viewer-project-id-tier3
  name: cnrm-viewer-client-project-yjs10-tier3 # kpt-set: cnrm-viewer-${project-id}-tier3
  namespace: client-project-yjs10-tier4 # kpt-set: ${project-id}-tier4
  annotations:
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/yoppworks-projects/Project/client-project-yjs10 # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/${client-name}-projects/Project/${project-id}
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|project-id-tier4|cnrm-viewer-project-id-tier3'
# AC-3(7), AC-3, AC-16(2)
roleRef:
  name: cnrm-viewer
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: cnrm-controller-manager-client-project-yjs10-tier3 # kpt-set: cnrm-controller-manager-${project-id}-tier3
    namespace: cnrm-system
    kind: ServiceAccount
---
# Repo sync role binding requirement
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata: # kpt-merge: project-id-tier3/syncs-repo
  name: syncs-repo
  namespace: client-project-yjs10-tier3 # kpt-set: ${project-id}-tier3
  annotations:
    internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|RoleBinding|project-id-tier3|syncs-repo'
subjects:
  - kind: ServiceAccount
    name: ns-reconciler-client-project-yjs10-tier3 # kpt-set: ns-reconciler-${project-id}-tier3
    namespace: config-management-system
# AC-3(7), AC-3, AC-16(2)
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io
