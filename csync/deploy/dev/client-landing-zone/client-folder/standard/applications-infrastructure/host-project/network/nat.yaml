# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# Cloud NAT northamerica-northeast1
# AU-12 - Enable Logging for Cloud NAT
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata: # kpt-merge: client-name-networking/host-project-id-nane1-nat
  name: net-host-project-yjs10-nane1-nat # kpt-set: ${host-project-id}-nane1-nat
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/project-id: net-host-project-yjs10 # kpt-set: ${host-project-id}
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/yoppworks-networking/ComputeRouter/net-host-project-yjs10-nane1-router # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeRouter/${host-project-id}-nane1-router
    internal.kpt.dev/upstream-identifier: 'compute.cnrm.cloud.google.com|ComputeRouterNAT|client-name-networking|host-project-id-nane1-nat'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: nane1-nat
  natIpAllocateOption: AUTO_ONLY
  region: northamerica-northeast1
  routerRef:
    name: net-host-project-yjs10-nane1-router # kpt-set: ${host-project-id}-nane1-router
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
  # AU-12
  logConfig:
    enable: true
    filter: ALL
---
# Cloud Router northamerica-northeast1
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata: # kpt-merge: client-name-networking/host-project-id-nane1-router
  name: net-host-project-yjs10-nane1-router # kpt-set: ${host-project-id}-nane1-router
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/project-id: net-host-project-yjs10 # kpt-set: ${host-project-id}
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/yoppworks-networking/ComputeNetwork/net-host-project-yjs10-global-standard-vpc # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeNetwork/${host-project-id}-global-standard-vpc
    internal.kpt.dev/upstream-identifier: 'compute.cnrm.cloud.google.com|ComputeRouter|client-name-networking|host-project-id-nane1-router'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: nane1-router
  description: northamerica-northeast1 router
  networkRef:
    name: net-host-project-yjs10-global-standard-vpc # kpt-set: ${host-project-id}-global-standard-vpc
  region: northamerica-northeast1
---
# Cloud NAT northamerica-northeast2
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata: # kpt-merge: client-name-networking/host-project-id-nane2-nat
  name: net-host-project-yjs10-nane2-nat # kpt-set: ${host-project-id}-nane2-nat
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/project-id: net-host-project-yjs10 # kpt-set: ${host-project-id}
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/yoppworks-networking/ComputeRouter/net-host-project-yjs10-nane2-router # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeRouter/${host-project-id}-nane2-router
    internal.kpt.dev/upstream-identifier: 'compute.cnrm.cloud.google.com|ComputeRouterNAT|client-name-networking|host-project-id-nane2-nat'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: nane2-nat
  natIpAllocateOption: AUTO_ONLY
  region: northamerica-northeast2
  routerRef:
    name: net-host-project-yjs10-nane2-router # kpt-set: ${host-project-id}-nane2-router
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
  # AU-12
  logConfig:
    enable: true
    filter: ALL
---
# Cloud Router northamerica-northeast2
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata: # kpt-merge: client-name-networking/host-project-id-nane2-router
  name: net-host-project-yjs10-nane2-router # kpt-set: ${host-project-id}-nane2-router
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/project-id: net-host-project-yjs10 # kpt-set: ${host-project-id}
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/yoppworks-networking/ComputeNetwork/net-host-project-yjs10-global-standard-vpc # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeNetwork/${host-project-id}-global-standard-vpc
    internal.kpt.dev/upstream-identifier: 'compute.cnrm.cloud.google.com|ComputeRouter|client-name-networking|host-project-id-nane2-router'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: nane2-router
  description: northamerica-northeast2 router
  networkRef:
    name: net-host-project-yjs10-global-standard-vpc # kpt-set: ${host-project-id}-global-standard-vpc
  region: northamerica-northeast2
