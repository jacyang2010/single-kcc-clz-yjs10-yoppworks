# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# Set up subnets for non-protected (unclassified) and pbmm use
# nonp and pbmm subnets have :
# - logging enabled for flow logs https://cloud.google.com/vpc/docs/using-flow-logs
# - private google access enabled https://cloud.google.com/vpc/docs/private-google-access
#########
# Subnet nonp-main northamerica-northeast1
# AU-12 - Enable Logging for Subnet
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata: # kpt-merge: client-name-networking/host-project-id-nane1-standard-nonp-main-snet
  name: net-host-project-yjs10-nane1-standard-nonp-main-snet # kpt-set: ${host-project-id}-nane1-standard-nonp-main-snet
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/project-id: net-host-project-yjs10 # kpt-set: ${host-project-id}
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/yoppworks-networking/ComputeNetwork/net-host-project-yjs10-global-standard-vpc # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeNetwork/${host-project-id}-global-standard-vpc
    internal.kpt.dev/upstream-identifier: 'compute.cnrm.cloud.google.com|ComputeSubnetwork|client-name-networking|host-project-id-nane1-standard-nonp-main-snet'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: nane1-standard-nonp-main-snet
  ipCidrRange: 10.1.0.0/21 # kpt-set: ${standard-nane1-nonp-main-snet}
  region: northamerica-northeast1
  description: northamerica-northeast1 nonp-main subnet
  privateIpGoogleAccess: true
  networkRef:
    name: net-host-project-yjs10-global-standard-vpc # kpt-set: ${host-project-id}-global-standard-vpc
  # AU-12
  logConfig:
    aggregationInterval: INTERVAL_5_SEC
    flowSampling: 0.5
    metadata: INCLUDE_ALL_METADATA
---
# Subnet pbmm-main northamerica-northeast1
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata: # kpt-merge: client-name-networking/host-project-id-nane1-standard-pbmm-main-snet
  name: net-host-project-yjs10-nane1-standard-pbmm-main-snet # kpt-set: ${host-project-id}-nane1-standard-pbmm-main-snet
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/project-id: net-host-project-yjs10 # kpt-set: ${host-project-id}
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/yoppworks-networking/ComputeNetwork/net-host-project-yjs10-global-standard-vpc # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeNetwork/${host-project-id}-global-standard-vpc
    internal.kpt.dev/upstream-identifier: 'compute.cnrm.cloud.google.com|ComputeSubnetwork|client-name-networking|host-project-id-nane1-standard-pbmm-main-snet'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: nane1-standard-pbmm-main-snet
  ipCidrRange: 10.1.128.0/21 # kpt-set: ${standard-nane1-pbmm-main-snet}
  region: northamerica-northeast1
  description: northamerica-northeast1 pbmm-main subnet
  privateIpGoogleAccess: true
  networkRef:
    name: net-host-project-yjs10-global-standard-vpc # kpt-set: ${host-project-id}-global-standard-vpc
  # AU-12
  logConfig:
    aggregationInterval: INTERVAL_5_SEC
    flowSampling: 0.5
    metadata: INCLUDE_ALL_METADATA
---
# Subnet nonp-main northamerica-northeast2
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata: # kpt-merge: client-name-networking/host-project-id-nane2-standard-nonp-main-snet
  name: net-host-project-yjs10-nane2-standard-nonp-main-snet # kpt-set: ${host-project-id}-nane2-standard-nonp-main-snet
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/project-id: net-host-project-yjs10 # kpt-set: ${host-project-id}
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/yoppworks-networking/ComputeNetwork/net-host-project-yjs10-global-standard-vpc # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeNetwork/${host-project-id}-global-standard-vpc
    internal.kpt.dev/upstream-identifier: 'compute.cnrm.cloud.google.com|ComputeSubnetwork|client-name-networking|host-project-id-nane2-standard-nonp-main-snet'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: nane2-standard-nonp-main-snet
  ipCidrRange: 10.1.8.0/21 # kpt-set: ${standard-nane2-nonp-main-snet}
  region: northamerica-northeast2
  description: northamerica-northeast2 nonp-main subnet
  privateIpGoogleAccess: true
  networkRef:
    name: net-host-project-yjs10-global-standard-vpc # kpt-set: ${host-project-id}-global-standard-vpc
  # AU-12
  logConfig:
    aggregationInterval: INTERVAL_5_SEC
    flowSampling: 0.5
    metadata: INCLUDE_ALL_METADATA
---
# Subnet pbmm-main northamerica-northeast2
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata: # kpt-merge: client-name-networking/host-project-id-nane2-standard-pbmm-main-snet
  name: net-host-project-yjs10-nane2-standard-pbmm-main-snet # kpt-set: ${host-project-id}-nane2-standard-pbmm-main-snet
  namespace: yoppworks-networking # kpt-set: ${client-name}-networking
  annotations:
    cnrm.cloud.google.com/project-id: net-host-project-yjs10 # kpt-set: ${host-project-id}
    config.kubernetes.io/depends-on: compute.cnrm.cloud.google.com/namespaces/yoppworks-networking/ComputeNetwork/net-host-project-yjs10-global-standard-vpc # kpt-set: compute.cnrm.cloud.google.com/namespaces/${client-name}-networking/ComputeNetwork/${host-project-id}-global-standard-vpc
    internal.kpt.dev/upstream-identifier: 'compute.cnrm.cloud.google.com|ComputeSubnetwork|client-name-networking|host-project-id-nane2-standard-pbmm-main-snet'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceID: nane2-standard-pbmm-main-snet
  ipCidrRange: 10.1.136.0/21 # kpt-set: ${standard-nane2-pbmm-main-snet}
  region: northamerica-northeast2
  description: northamerica-northeast2 pbmm-main subnet
  privateIpGoogleAccess: true
  networkRef:
    name: net-host-project-yjs10-global-standard-vpc # kpt-set: ${host-project-id}-global-standard-vpc
  # AU-12
  logConfig:
    aggregationInterval: INTERVAL_5_SEC
    flowSampling: 0.5
    metadata: INCLUDE_ALL_METADATA
