# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#########
# Grant GCP role Service Account Admin to GCP networking-sa
# AC-3(7)
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-serviceaccountadmin-permissions
  name: networking-sa-serviceaccountadmin-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/kcclcz-nonprod-hub-yoppworks # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${hub-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-serviceaccountadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
  role: roles/iam.serviceAccountAdmin
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role Service Account User to GCP networking-sa
# AC-3(7)
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-serviceaccountuser-permissions
  name: networking-sa-serviceaccountuser-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/kcclcz-nonprod-hub-yoppworks # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${hub-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-serviceaccountuser-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
  role: roles/iam.serviceAccountUser
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role Compute Instance Admin v1 to GCP networking-sa
# AC-3(7)
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/networking-sa-computeinstanceadmin-permissions
  name: networking-sa-computeinstanceadmin-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/kcclcz-nonprod-hub-yoppworks # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${hub-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|networking-sa-computeinstanceadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
  role: roles/compute.instanceAdmin.v1
  member: "serviceAccount:networking-sa@single-kcc-yjs10.iam.gserviceaccount.com" # kpt-set: serviceAccount:networking-sa@${management-project-id}.iam.gserviceaccount.com
---
# Grant GCP role IAP-Secured Tunnel User to hub admin
# Required for IAP
# AC-3(7)
# AC-17(1)
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/hub-admin-iaptunnelresourceaccessor-permissions
  name: hub-admin-iaptunnelresourceaccessor-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/kcclcz-nonprod-hub-yoppworks # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${hub-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|hub-admin-iaptunnelresourceaccessor-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
  role: roles/iap.tunnelResourceAccessor
  member: "group:cloud-landing-zone-deployers@clz-dev3.yoppworks.com" # kpt-set: ${hub-admin}
---
# Grant GCP role Compute Instance Admin v1 to hub admin
# Required for IAP
# AC-3(7)
# AC-17(1)
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata: # kpt-merge: config-control/hub-admin-computeinstanceadmin-permissions
  name: hub-admin-computeinstanceadmin-permissions
  namespace: config-control # kpt-set: ${management-namespace}
  annotations:
    cnrm.cloud.google.com/project-id: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
    cnrm.cloud.google.com/ignore-clusterless: "true"
    config.kubernetes.io/depends-on: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/kcclcz-nonprod-hub-yoppworks # kpt-set: resourcemanager.cnrm.cloud.google.com/namespaces/projects/Project/${hub-project-id}
    internal.kpt.dev/upstream-identifier: 'iam.cnrm.cloud.google.com|IAMPolicyMember|config-control|hub-admin-computeinstanceadmin-permissions'
    cnrm.cloud.google.com/blueprint: 'kpt-pkg-fn'
spec:
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: kcclcz-nonprod-hub-yoppworks # kpt-set: ${hub-project-id}
  role: roles/compute.instanceAdmin.v1
  member: "group:cloud-landing-zone-deployers@clz-dev3.yoppworks.com" # kpt-set: ${hub-admin}
